{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\Documents\\\\Programming Projects\\\\MHTrapBrowser\\\\trapbrowser-react\\\\src\\\\components\\\\Weapons.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport weaponsList from '../assets/weapons.json';\nimport WeaponCard from \"./WeaponCard\";\nimport FilterForm from \"./FilterForm\";\nimport PageHeader from \"./PageHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst lodash = require(\"lodash\");\nexport default function Weapons() {\n  _s();\n  // TO DO: name filter with regex?\n\n  // optional filters which aren't present if the users selects \"all\" or \"any\" as an option\n  // TO DO: form element should delete and add these as specified by form values\n  const [optionalFilters, setOptionalFilters] = useState({\n    power_type: \"Physical\"\n  });\n\n  // apply the optional filters (using lodash library)\n  let firstFilterList = lodash.filter(weaponsList, optionalFilters);\n\n  // mandatory filters that will always have a value of some sort\n  const [mandatoryFilters, setMandatoryFilters] = useState({\n    min_power: 0,\n    max_power: 7000,\n    min_power_bonus: 0.1,\n    max_power_bonus: 1,\n    min_attr_bonus: 0,\n    max_attr_bonus: 1,\n    min_luck: 0,\n    max_luck: 500,\n    min_title_req: 0,\n    max_title_req: 15,\n    min_cheese_effect: 0,\n    max_cheese_effect: 12\n  });\n  useEffect(() => setMandatoryFilters(\"this is garbage now\"));\n  console.log(mandatoryFilters);\n\n  // Filter the first list further with the manatory filters (not lodash this time)\n  let secondFilterList = firstFilterList.filter(x => x.power >= mandatoryFilters.min_power && x.power <= mandatoryFilters.max_power && x.power_bonus >= mandatoryFilters.min_power_bonus && x.power_bonus <= mandatoryFilters.max_power_bonus && x.attr_bonus >= mandatoryFilters.min_attr_bonus && x.attr_bonus <= mandatoryFilters.max_attr_bonus && x.luck >= mandatoryFilters.min_luck && x.luck <= mandatoryFilters.max_luck && x.title_req >= mandatoryFilters.min_title_req && x.title_req <= mandatoryFilters.max_title_req && x.cheese_effect >= mandatoryFilters.min_cheese_effect && x.cheese_effect <= mandatoryFilters.max_cheese_effect);\n\n  // create a sort (can take multiple columns)\n  // TO DO: find out how to change sort direction\n  const [currentSort, setCurrentSort] = useState([\"title_req\"]);\n  let sortedAndFilteredList = lodash.sortBy(secondFilterList, currentSort);\n\n  // return the page\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterForm, {\n      childSetMandatory: setMandatoryFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: sortedAndFilteredList.map(weapon => /*#__PURE__*/_jsxDEV(WeaponCard, {\n        weapon: weapon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Weapons, \"LV/GJe+yTnjLkC9bsk9Lvr/wdBw=\");\n_c = Weapons;\nvar _c;\n$RefreshReg$(_c, \"Weapons\");","map":{"version":3,"names":["useEffect","useState","weaponsList","WeaponCard","FilterForm","PageHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","lodash","require","Weapons","_s","optionalFilters","setOptionalFilters","power_type","firstFilterList","filter","mandatoryFilters","setMandatoryFilters","min_power","max_power","min_power_bonus","max_power_bonus","min_attr_bonus","max_attr_bonus","min_luck","max_luck","min_title_req","max_title_req","min_cheese_effect","max_cheese_effect","console","log","secondFilterList","x","power","power_bonus","attr_bonus","luck","title_req","cheese_effect","currentSort","setCurrentSort","sortedAndFilteredList","sortBy","children","fileName","_jsxFileName","lineNumber","columnNumber","childSetMandatory","className","map","weapon","_c","$RefreshReg$"],"sources":["C:/Users/joshu/Documents/Programming Projects/MHTrapBrowser/trapbrowser-react/src/components/Weapons.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport weaponsList from '../assets/weapons.json';\r\nimport WeaponCard from \"./WeaponCard\";\r\nimport FilterForm from \"./FilterForm\";\r\nimport PageHeader from \"./PageHeader\";\r\n\r\nconst lodash = require(\"lodash\");\r\n\r\nexport default function Weapons() {\r\n\r\n  // TO DO: name filter with regex?\r\n\r\n  // optional filters which aren't present if the users selects \"all\" or \"any\" as an option\r\n  // TO DO: form element should delete and add these as specified by form values\r\n  const [optionalFilters, setOptionalFilters] = useState({\r\n    power_type: \"Physical\"\r\n  })\r\n\r\n  // apply the optional filters (using lodash library)\r\n  let firstFilterList = lodash.filter(weaponsList, optionalFilters)\r\n\r\n  // mandatory filters that will always have a value of some sort\r\n  const [mandatoryFilters, setMandatoryFilters] = useState({\r\n    min_power: 0,\r\n    max_power: 7000,\r\n    min_power_bonus: 0.1,\r\n    max_power_bonus: 1,\r\n    min_attr_bonus: 0,\r\n    max_attr_bonus: 1,\r\n    min_luck: 0,\r\n    max_luck: 500,\r\n    min_title_req: 0,\r\n    max_title_req: 15,\r\n    min_cheese_effect: 0,\r\n    max_cheese_effect: 12,\r\n  })\r\n  useEffect(() => setMandatoryFilters(\"this is garbage now\"))  ;\r\n  console.log(mandatoryFilters);\r\n\r\n  // Filter the first list further with the manatory filters (not lodash this time)\r\n  let secondFilterList = firstFilterList.filter(x =>\r\n    x.power >= mandatoryFilters.min_power &&\r\n    x.power <= mandatoryFilters.max_power &&\r\n    x.power_bonus >= mandatoryFilters.min_power_bonus &&\r\n    x.power_bonus <= mandatoryFilters.max_power_bonus &&\r\n    x.attr_bonus >= mandatoryFilters.min_attr_bonus &&\r\n    x.attr_bonus <= mandatoryFilters.max_attr_bonus &&\r\n    x.luck >= mandatoryFilters.min_luck &&\r\n    x.luck <= mandatoryFilters.max_luck &&\r\n    x.title_req >= mandatoryFilters.min_title_req &&\r\n    x.title_req <= mandatoryFilters.max_title_req &&\r\n    x.cheese_effect >= mandatoryFilters.min_cheese_effect &&\r\n    x.cheese_effect <= mandatoryFilters.max_cheese_effect\r\n  );\r\n\r\n  // create a sort (can take multiple columns)\r\n  // TO DO: find out how to change sort direction\r\n  const [currentSort, setCurrentSort] = useState([\"title_req\"])\r\n\r\n  let sortedAndFilteredList = lodash.sortBy(secondFilterList, currentSort);\r\n\r\n  // return the page\r\n  return (\r\n    <>\r\n\r\n      <PageHeader />\r\n\r\n      <FilterForm\r\n        childSetMandatory={setMandatoryFilters}\r\n      />\r\n\r\n      <div className=\"card-container\">\r\n        {sortedAndFilteredList.map((weapon) => (\r\n          <WeaponCard weapon={weapon} />\r\n        ))}\r\n      </div>\r\n\r\n    </>\r\n\r\n  );\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}