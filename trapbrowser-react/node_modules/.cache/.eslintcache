[{"C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\index.js":"1","C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\reportWebVitals.js":"2","C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\App.js":"3","C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\components\\Weapons.js":"4","C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\components\\WeaponCard.js":"5","C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\components\\FilterForm.js":"6","C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\components\\PageHeader.js":"7","C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\components\\SortButton.js":"8","C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\components\\WelcomeWindow.js":"9"},{"size":535,"mtime":1683209563475,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1682979365336,"results":"12","hashOfConfig":"11"},{"size":403,"mtime":1683247044395,"results":"13","hashOfConfig":"11"},{"size":2714,"mtime":1683246721261,"results":"14","hashOfConfig":"11"},{"size":3045,"mtime":1683239613246,"results":"15","hashOfConfig":"11"},{"size":16998,"mtime":1683246721760,"results":"16","hashOfConfig":"11"},{"size":192,"mtime":1683215898142,"results":"17","hashOfConfig":"11"},{"size":3318,"mtime":1683246023027,"results":"18","hashOfConfig":"11"},{"size":1711,"mtime":1683247673079,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"s3rj7k",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\index.js",[],[],[],"C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\reportWebVitals.js",[],[],"C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\App.js",[],[],"C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\components\\Weapons.js",["51","52"],[],"import { useState } from \"react\";\r\nimport weaponsList from '../assets/weapons.json';\r\nimport WeaponCard from \"./WeaponCard\";\r\nimport FilterForm from \"./FilterForm\";\r\nimport SortButton from \"./SortButton\";\r\n\r\nconst lodash = require(\"lodash\");\r\n\r\nexport default function Weapons() {\r\n\r\n  const [filters, setFilters] = useState({\r\n    power_type: [\"Arcane\", \"Draconic\", \"Forgotten\", \"Hydro\", \"Law\", \"Parental\", \"Physical\", \"Rift\", \"Shadow\", \"Tactical\"],\r\n    min_power: 0,\r\n    max_power: 20000,\r\n    min_power_bonus: 0,\r\n    max_power_bonus: 35,\r\n    min_attr_bonus: 0,\r\n    max_attr_bonus: 40,\r\n    min_luck: 0,\r\n    max_luck: 40,\r\n    min_title_req: 0,\r\n    max_title_req: 19,\r\n    min_cheese_effect: -6,\r\n    max_cheese_effect: 6,\r\n    limited: 'any'\r\n  })\r\n\r\n  let filteredList = weaponsList.filter(x => {\r\n\r\n    if (filters.power_type && !filters.power_type.includes(x.power_type)) {\r\n      return false\r\n    }\r\n\r\n    if (x.power < filters.min_power || x.power > filters.max_power) {\r\n      return false;\r\n    }\r\n\r\n    if (x.power_bonus < (filters.min_power_bonus / 100) || x.power_bonus > (filters.max_power_bonus / 100)) {\r\n      return false;\r\n    }\r\n\r\n    if (x.attr_bonus < (filters.min_attr_bonus / 100) || x.attr_bonus > (filters.max_attr_bonus / 100)) {\r\n      return false;\r\n    }\r\n\r\n    if (x.luck < filters.min_luck || x.luck > filters.max_luck) {\r\n      return false;\r\n    }\r\n\r\n    if (x.title_req < filters.title_req || x.title > filters.title_req) {\r\n      return false;\r\n    }\r\n\r\n    if (x.cheese_effect < filters.cheese_effect || x.cheese_effect > filters.cheese_effect) {\r\n      return false;\r\n    }\r\n\r\n    if (filters.limited != 'any' && filters.limited != x.limited) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  console.log('weaponList', weaponsList);\r\n  console.log('filteredList', filteredList);\r\n\r\n  // create a sort (can take multiple columns)\r\n  // TO DO: find out how to change sort direction\r\n  const [currentSortField, setCurrentSortField] = useState([\"power\"])\r\n  const [currentSortDirection, setCurrentSortDirection] = useState(\"asc\")\r\n\r\n  let sortedAndFilteredList = lodash.orderBy(filteredList, [currentSortField, \"power\"], currentSortDirection);\r\n\r\n  // return the page\r\n  return (\r\n    <>\r\n      <FilterForm\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n      // childSetSort={setCurrentSort}\r\n      />\r\n\r\n      <SortButton\r\n        setCurrentSortDirection={setCurrentSortDirection}\r\n        setCurrentSortField={setCurrentSortField}\r\n      />\r\n\r\n      <div className=\"card-container\">\r\n        {sortedAndFilteredList.map((weapon) => (\r\n          <WeaponCard key={weapon.name} weapon={weapon} />\r\n        ))}\r\n      </div>\r\n\r\n    </>\r\n\r\n  );\r\n\r\n}","C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\components\\WeaponCard.js",[],[],"C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\components\\FilterForm.js",["53","54"],[],"// Modal form component that users will set their filters.\r\nimport { useState, useEffect } from 'react';\r\nimport ReactModal from 'react-modal';\r\nexport default function FilterForm({ setFilters, filters }) {\r\n\r\n    function formReset() {\r\n        document.getElementById(\"filterForm\").reset();\r\n    }\r\n    // modal visibility state and toggle\r\n    const [isModalOpen, setisModalOpen] = useState(false);\r\n\r\n    const [warningMessage, setWarningMessage] = useState(\"Default warning message\")\r\n    const [warningVisibility, setWarningVisibility] = useState(\"warning-message-inactive\")\r\n\r\n    function displayWarning(message) {\r\n        setWarningMessage(message);\r\n        setWarningVisibility(\"warning-message\")\r\n    }\r\n\r\n    function hideWarning() {\r\n        setWarningMessage(\"\");\r\n        setWarningVisibility(\"warning-message-inactive\")\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n\r\n        setFilters({ ...filters, [e.target.name]: e.target.value });\r\n\r\n        if (filters.min_power > filters.max_power) {\r\n            displayWarning(\"Your minimum power is set higher than your maximum. Nothing will be shown.\")\r\n            return (null)\r\n        } else {\r\n            hideWarning();\r\n\r\n        }\r\n\r\n        if (filters.min_power_bonus > filters.max_power_bonus) {\r\n            displayWarning(\"Your minimum power bonus is set higher than your maximum. Nothing will be shown.\")\r\n            return (null)\r\n        } else {\r\n            hideWarning();\r\n        }\r\n\r\n        if (filters.min_attr_bonus > filters.max_attr_bonus) {\r\n            displayWarning(\"Your minimum attraction bonus is set higher than your maximum. Nothing will be shown.\")\r\n            return (null)\r\n        } else {\r\n            hideWarning();\r\n        }\r\n        if (filters.min_luck > filters.max_luck) {\r\n            displayWarning(\"Your minimum luck is set higher than your maximum. Nothing will be\")\r\n            return (null)\r\n        } else {\r\n            hideWarning();\r\n        }\r\n        if (filters.min_title_req > filters.max_title_req) {\r\n            displayWarning(\"Your lowest title is higher than your highest title. Nothing will be shown.\")\r\n            return (null)\r\n        } else {\r\n            hideWarning();\r\n        }\r\n        if (filters.min_cheese_effect > filters.max_cheese_effect) {\r\n            displayWarning(\"Your worst cheese effect is lower that your best cheese effect. Nothing will be shown.\")\r\n            return (null)\r\n        }\r\n\r\n        hideWarning();\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleCheckboxChange = (e) => {\r\n        if (e.target.checked) {\r\n            setFilters({\r\n                ...filters,\r\n                ['power_type']: [...filters.power_type, e.target.value]\r\n            });\r\n        } else {\r\n            let newData = { ...filters };\r\n            const index = newData.power_type.indexOf(e.target.value);\r\n            newData.power_type.splice(index, 1);\r\n\r\n            setFilters(newData);\r\n        }\r\n    }\r\n\r\n    /* FOR DEBUGGING */\r\n    // useEffect(() => {\r\n    //     console.log(filters);\r\n    // }, [filters])\r\n\r\n    function openModal() {\r\n        setisModalOpen(true);\r\n        document.body.style.overflow = 'hidden';\r\n    }\r\n\r\n    function closeModal() {\r\n        setisModalOpen(false)\r\n        document.body.style.overflow = 'unset';\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button className=\"filter-button\" onClick={openModal}>\r\n                Filter and Sort\r\n            </button>\r\n\r\n            <ReactModal\r\n                isOpen={isModalOpen}\r\n                className=\"modal-form\"\r\n                closeTimeoutMS={500}\r\n                style={\r\n                    {\r\n                        overlay: {\r\n                            background: \"rgba(0, 0, 0, 0.5)\",\r\n                            overflowY: \"scroll\"\r\n                        },\r\n                        content: {\r\n                        }\r\n                    }\r\n                }\r\n                shouldCloseOnOverlayClick={true}\r\n            >\r\n                <form id=\"filterForm\">\r\n\r\n\r\n\r\n                    <fieldset className=\"form-power-selection\">\r\n                        <legend>Power Type</legend>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"formCheck-1\" value=\"Arcane\" onClick={handleCheckboxChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"formCheck-1\">Arcane</label>\r\n\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"formCheck-2\" value=\"Draconic\" onClick={handleCheckboxChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"formCheck-2\">Draconic</label>\r\n\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"formCheck-9\" value=\"Forgotten\" onClick={handleCheckboxChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"formCheck-9\">Forgotten</label>\r\n\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"formCheck-8\" value=\"Hydro\" onClick={handleCheckboxChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"formCheck-8\">Hydro</label>\r\n\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"formCheck-7\" value=\"Law\" onClick={handleCheckboxChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"formCheck-7\">Law</label>\r\n\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"formCheck-6\" value=\"Parental\" onClick={handleCheckboxChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"formCheck-6\">Parental</label>\r\n\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"formCheck-5\" value=\"Physical\" onClick={handleCheckboxChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"formCheck-5\" >Physical</label>\r\n\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"formCheck-4\" value=\"Rift\" onClick={handleCheckboxChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"formCheck-4\" >Rift</label>\r\n\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"formCheck-3\" value=\"Shadow\" onClick={handleCheckboxChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"formCheck-3\" >Shadow</label>\r\n\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"formCheck-10\" value=\"Tactical\" onClick={handleCheckboxChange} />\r\n                        <label className=\"form-check-label\" htmlFor=\"formCheck-10\" >Tactical</label>\r\n                    </fieldset>\r\n\r\n                    <fieldset>\r\n                        <legend>Power</legend>\r\n                        <label className=\"form-label\" htmlFor=\"min_power\">Minimum power</label>\r\n                        <input\r\n                            className=\"form-range\"\r\n                            type=\"range\"\r\n                            name=\"min_power\"\r\n                            id=\"min_power\"\r\n                            min=\"0\"\r\n                            max=\"20000\"\r\n                            step=\"100\"\r\n                            defaultValue={filters.min_power}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <output id=\"min_power_value\">{filters.min_power}</output>\r\n\r\n                        <label className=\"form-label\" htmlFor=\"max_power\">Maximum power</label>\r\n                        <input className=\"form-range\" type=\"range\" name=\"max_power\" id=\"max_power\" min=\"0\" max=\"16500\" step=\"100\" defaultValue={filters.max_power} onChange={handleChange} />\r\n                        <output id=\"max_power_value\">{filters.max_power}</output>\r\n                    </fieldset>\r\n\r\n                    <fieldset>\r\n                        <legend>Power Bonus</legend>\r\n                        <label className=\"form-label\" htmlFor=\"min_power_bonus\">Minimum power bonus</label>\r\n                        <input className=\"form-range\" type=\"range\" name=\"min_power_bonus\" id=\"min_power_bonus\" min=\"0\" max=\"35\" step=\"1\" defaultValue={filters.min_power_bonus} onChange={handleChange} />\r\n                        <output id=\"min_power_bonus_value\">{filters.min_power_bonus + \"%\"}</output>\r\n\r\n                        <label className=\"form-label\" htmlFor=\"max_power_bonus\">Maximum power bonus</label>\r\n                        <input className=\"form-range\" type=\"range\" name=\"max_power_bonus\" id=\"max_power_bonus\" min=\"0\" max=\"35\" step=\"1\" defaultValue={filters.max_power_bonus} onChange={handleChange} />\r\n                        <output id=\"max_power_bonus_value\">{filters.max_power_bonus + \"%\"}</output>\r\n                    </fieldset>\r\n\r\n                    <fieldset>\r\n                        <legend>Attraction Bonus</legend>\r\n                        <label className=\"form-label\" htmlFor=\"min_attr_bonus\">Minimum attraction bonus</label>\r\n                        <input className=\"form-range\" type=\"range\" name=\"min_attr_bonus\" min=\"0\" max=\"40\" step=\"1\" defaultValue={filters.min_attr_bonus} onChange={handleChange} />\r\n                        <output id=\"min_attr_bonus_value\">{filters.min_attr_bonus + \"%\"}</output>\r\n\r\n                        <label className=\"form-label\" htmlFor=\"max_attr_bonus\">Maximum attraction bonus</label>\r\n                        <input className=\"form-range\" type=\"range\" name=\"max_attr_bonus\" min=\"0\" max=\"40\" defaultValue={filters.max_attr_bonus} onChange={handleChange} />\r\n                        <output id=\"max_attr_bonus_value\">{filters.max_attr_bonus + \"%\"}</output>\r\n                    </fieldset>\r\n\r\n                    <fieldset>\r\n                        <legend>Luck</legend>\r\n\r\n                        <label className=\"form-label\" htmlFor=\"min_luck\">Minimum luck</label>\r\n                        <input className=\"form-range\" type=\"range\" name=\"min_luck\" min=\"0\" max=\"40\" defaultValue={filters.min_luck} onChange={handleChange} />\r\n                        <output id=\"min_luck_value\">{filters.min_luck}</output>\r\n\r\n                        <label className=\"form-label\" htmlFor=\"max_luck\">Maximum luck</label>\r\n                        <input className=\"form-range\" type=\"range\" name=\"max_luck\" min=\"0\" max=\"40\" defaultValue={filters.max_luck} onChange={handleChange} />\r\n                        <output id=\"max_luck_value\">{filters.max_luck}</output>\r\n                    </fieldset>\r\n\r\n                    <div className=\"form-other-controls\">\r\n                        <label className=\"form-label\" htmlFor=\"min_title_req\">Lowest title needed</label>\r\n                        <select name=\"min_title_req\" defaultValue={filters.min_title_req} onChange={handleChange}>\r\n                            <option value=\"0\">Novice</option>\r\n                            <option value=\"1\">Recruit</option>\r\n                            <option value=\"2\">Apprentice</option>\r\n                            <option value=\"3\">Initiate</option>\r\n                            <option value=\"4\">Journeyman/Journeywomen</option>\r\n                            <option value=\"5\">Master</option>\r\n                            <option value=\"6\">Grandmaster</option>\r\n                            <option value=\"7\">Legendary</option>\r\n                            <option value=\"8\">Hero</option>\r\n                            <option value=\"9\">Knight</option>\r\n                            <option value=\"10\">Lord/Lady</option>\r\n                            <option value=\"11\">Baron/Baroness</option>\r\n                            <option value=\"12\">Count/Countess</option>\r\n                            <option value=\"13\">Duke/Duchess</option>\r\n                            <option value=\"14\">Grand Duke/Duchess</option>\r\n                            <option value=\"15\">Archduke/Archduchess</option>\r\n                            <option value=\"16\">Viceroy</option>\r\n                            <option value=\"17\">Elder</option>\r\n                            <option value=\"18\">Sage</option>\r\n                            <option value=\"19\">Fabled</option>\r\n                        </select>\r\n\r\n                        <label className=\"form-label\" htmlFor=\"max_title_req\">Highest title needed</label>\r\n                        <select name=\"max_title_req\" defaultValue={filters.max_title_req} onChange={handleChange}>\r\n                            <option value=\"19\" selected=\"\">Fabled</option>\r\n                            <option value=\"18\">Sage</option>\r\n                            <option value=\"17\">Elder</option>\r\n                            <option value=\"16\">Viceroy</option>\r\n                            <option value=\"15\">Archduke/Archduchess</option>\r\n                            <option value=\"14\">Grand Duke/Duchess</option>\r\n                            <option value=\"13\">Duke/Duchess</option>\r\n                            <option value=\"12\">Count/Countess</option>\r\n                            <option value=\"11\">Baron/Baroness</option>\r\n                            <option value=\"10\">Lord/Lady</option>\r\n                            <option value=\"9\">Knight</option>\r\n                            <option value=\"8\">Hero</option>\r\n                            <option value=\"7\">Legendary</option>\r\n                            <option value=\"6\">Grandmaster</option>\r\n                            <option value=\"5\">Master</option>\r\n                            <option value=\"4\">Journeyman/Journeywomen</option>\r\n                            <option value=\"3\">Initiate</option>\r\n                            <option value=\"2\">Apprentice</option>\r\n                            <option value=\"1\">Recruit</option>\r\n                            <option value=\"0\">Novice</option>\r\n                        </select>\r\n\r\n                        <label className=\"form-label\" htmlFor=\"min_cheese_effect\">Lowest cheese effect</label>\r\n                        <select name=\"min_cheese_effect\" defaultValue={filters.min_cheese_effect} onChange={handleChange}>\r\n                            <option value=\"-6\" selected=\"\">Über Stale</option>\r\n                            <option value=\"-5\">Ultimately Stale</option>\r\n                            <option value=\"-4\">Insanely Stale</option>\r\n                            <option value=\"-3\">Extremely Stale</option>\r\n                            <option value=\"-2\">Very Stale</option>\r\n                            <option value=\"-1\">Stale</option>\r\n                            <option value=\"0\">No cheese effect</option>\r\n                            <option value=\"1\">Fresh</option>\r\n                            <option value=\"2\">Very Fresh</option>\r\n                            <option value=\"3\">Extremely Fresh</option>\r\n                            <option value=\"4\">Insanely Fresh</option>\r\n                            <option value=\"5\">Ultimately Fresh</option>\r\n                            <option value=\"6\">Über Fresh</option>\r\n                        </select>\r\n\r\n                        <label className=\"form-label\" htmlFor=\"max_cheese_effect\">Highest cheese effect</label>\r\n                        <select name=\"max_cheese_effect\" defaultValue={filters.max_cheese_effect} onChange={handleChange}>\r\n                            <option value=\"6\" selected=\"\">Über Fresh</option>\r\n                            <option value=\"5\">Ultimately Fresh</option>\r\n                            <option value=\"4\">Insanely Fresh</option>\r\n                            <option value=\"3\">Extremely Fresh</option>\r\n                            <option value=\"2\">Very Fresh</option>\r\n                            <option value=\"1\">Fresh</option>\r\n                            <option value=\"0\">No cheese effect</option>\r\n                            <option value=\"-1\">Stale</option>\r\n                            <option value=\"-2\">Very Stale</option>\r\n                            <option value=\"-3\">Extremely Stale</option>\r\n                            <option value=\"-4\">Insanely Stale</option>\r\n                            <option value=\"-5\">Ultimately Stale</option>\r\n                            <option value=\"-6\">Über Stale</option>\r\n                        </select>\r\n\r\n                        <label className=\"form-label\" htmlFor=\"limited\">Limited Edition?</label>\r\n                        <select name=\"limited\" defaultValue={filters.limited} onChange={handleChange}>\r\n                            <option value=\"any\">Any</option>\r\n                            <option value=\"1\">Limited edition only</option>\r\n                            <option value=\"0\">Not limited edition</option>\r\n                        </select>\r\n\r\n                    </div>\r\n\r\n                    <div id=\"warning-message\" className={warningVisibility}>{warningMessage}</div>\r\n\r\n                    <div className=\"form-buttons\">\r\n                        <button type=\"button\" onClick={closeModal}>Close</button>\r\n                        <button type=\"button\" onClick={formReset}>Reset Filters</button>\r\n                    </div>\r\n                </form>\r\n            </ReactModal>\r\n        </>\r\n    )\r\n\r\n}","C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\components\\PageHeader.js",[],[],"C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\components\\SortButton.js",["55"],[],"export default function SortButton ({setCurrentSortField, setCurrentSortDirection}) {\r\n\r\n    const sortUpdate = (e) => {\r\n        switch(e.target.value) {\r\n            case \"power_asc\":\r\n                setCurrentSortField(\"power\")\r\n                setCurrentSortDirection(\"asc\")\r\n                break;\r\n            \r\n            case \"power_desc\":\r\n                setCurrentSortField(\"power\")\r\n                setCurrentSortDirection(\"desc\")\r\n                break;\r\n\r\n            case \"power_bonus_asc\":\r\n                setCurrentSortField(\"power_bonus\")\r\n                setCurrentSortDirection(\"desc\")\r\n                break;\r\n                \r\n            case \"power_bonus_desc\":\r\n                setCurrentSortField(\"power_bonus\")\r\n                setCurrentSortDirection(\"desc\")\r\n                break;\r\n\r\n            case \"attr_bonus_asc\":\r\n                setCurrentSortField(\"attr_bonus\")\r\n                setCurrentSortDirection(\"asc\")\r\n                break;\r\n\r\n            case \"attr_bonus_desc\":\r\n                setCurrentSortField(\"attr_bonus\")\r\n                setCurrentSortDirection(\"desc\")\r\n                break;\r\n\r\n            case \"luck_asc\":\r\n                setCurrentSortField(\"luck\")\r\n                setCurrentSortDirection(\"asc\")\r\n                break;\r\n\r\n            case \"luck_desc\":\r\n                setCurrentSortField(\"luck\")\r\n                setCurrentSortDirection(\"desc\")\r\n                break;\r\n\r\n            case \"title_asc\":\r\n                setCurrentSortField(\"title\")\r\n                setCurrentSortDirection(\"asc\")\r\n                break;\r\n\r\n            case \"title_desc\":\r\n                setCurrentSortField(\"title\")\r\n                setCurrentSortDirection(\"desc\")\r\n                break;\r\n\r\n            case \"cheese_effect_asc\":\r\n                setCurrentSortField(\"cheese_effect\")\r\n                setCurrentSortDirection(\"asc\")\r\n                break;\r\n\r\n            case \"cheese_effect_desc\":\r\n                setCurrentSortField(\"cheese_effect\")\r\n                setCurrentSortDirection(\"desc\")\r\n                break;\r\n        }    \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"sorter\">\r\n            <label htmlFor=\"\">Sort: </label>\r\n            <select name=\"sortdirection\" defaultValue={\"power_asc\"} onChange={sortUpdate}>\r\n                <option value=\"power_asc\">Power - Ascending</option>\r\n                <option value=\"power_desc\">Power - Descending</option>\r\n                <option value=\"power_bonus_asc\">Power Bonus - Ascending</option>\r\n                <option value=\"power_bonus_desc\">Power Bonus - Descending</option>\r\n                <option value=\"attr_bonus_asc\">Attraction Bonus - Ascending</option>\r\n                <option value=\"attr_bonus_desc\">Attraction Bonus - Descending</option>\r\n                <option value=\"luck_asc\">Luck - Ascending</option>\r\n                <option value=\"luck_desc\">Luck - Ascending</option>\r\n                <option value=\"title_asc\">Title Required - Ascending</option>\r\n                <option value=\"title_desc\">Title Required - Descending</option>\r\n                <option value=\"cheese_effect_asc\">Cheese Effect - Ascending</option>\r\n                <option value=\"cheese_effect_desc\">Cheese Effect - Descending</option>\r\n            </select>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\joshu\\Documents\\Programming Projects\\MHTrapBrowser\\trapbrowser-react\\src\\components\\WelcomeWindow.js",[],[],{"ruleId":"56","severity":1,"message":"57","line":58,"column":25,"nodeType":"58","messageId":"59","endLine":58,"endColumn":27},{"ruleId":"56","severity":1,"message":"57","line":58,"column":53,"nodeType":"58","messageId":"59","endLine":58,"endColumn":55},{"ruleId":"60","severity":1,"message":"61","line":2,"column":20,"nodeType":"62","messageId":"63","endLine":2,"endColumn":29},{"ruleId":"64","severity":1,"message":"65","line":77,"column":17,"nodeType":"66","messageId":"67","endLine":77,"endColumn":72,"fix":"68"},{"ruleId":"69","severity":1,"message":"70","line":4,"column":9,"nodeType":"71","messageId":"72","endLine":64,"endColumn":10},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-useless-computed-key","Unnecessarily computed property ['power_type'] found.","Property","unnecessarilyComputedProperty",{"range":"73","text":"74"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",[2635,2649],"'power_type'"]