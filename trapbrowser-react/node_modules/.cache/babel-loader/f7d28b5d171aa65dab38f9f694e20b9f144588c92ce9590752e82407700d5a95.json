{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\Documents\\\\Programming Projects\\\\MHTrapBrowser\\\\trapbrowser-react\\\\src\\\\components\\\\ModalFilterForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport weaponsList from '../assets/weapons.json';\nimport dataList from '../assets/data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ModalFilterForm() {\n  _s();\n  const [typeFilter, setTypeFilter] = useState(['Arcane']);\n  const filteredList = weaponsList.filter(weapon => {\n    return typeFilter.length ? typeFilter.includes(weapon.power_type) : true;\n  });\n  const handleCheckboxClick = e => {\n    if (!typeFilter.includes(e.target.value)) {\n      setTypeFilter([...typeFilter, e.target.value]);\n    } else {\n      const newTypeFilter = typeFilter.filter(oldType => {\n        return oldType != e.target.value;\n      });\n      setTypeFilter(newTypeFilter);\n    }\n  };\n  /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      margin: '1rem'\n    },\n    children: dataList.types.map(type => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: type,\n        value: type,\n        checked: typeFilter.includes(type),\n        onClick: handleCheckboxClick,\n        id: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: type,\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ModalFilterForm, \"VxvTdwSEQ8y2RGUhJtDvRIJ0eAI=\");\n_c = ModalFilterForm;\nvar _c;\n$RefreshReg$(_c, \"ModalFilterForm\");","map":{"version":3,"names":["useEffect","useState","weaponsList","dataList","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalFilterForm","_s","typeFilter","setTypeFilter","filteredList","filter","weapon","length","includes","power_type","handleCheckboxClick","e","target","value","newTypeFilter","oldType","style","margin","children","types","map","type","name","checked","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/joshu/Documents/Programming Projects/MHTrapBrowser/trapbrowser-react/src/components/ModalFilterForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport weaponsList from '../assets/weapons.json';\r\nimport dataList from '../assets/data.json';\r\n\r\nexport default function ModalFilterForm() {\r\n    const [typeFilter, setTypeFilter] = useState(['Arcane']);\r\n\r\n    const filteredList = weaponsList.filter((weapon) => {\r\n    return typeFilter.length ? typeFilter.includes(weapon.power_type) : true;\r\n    });\r\n\r\n    const handleCheckboxClick = (e) => {\r\n    if(!typeFilter.includes(e.target.value)) {\r\n        setTypeFilter([...typeFilter, e.target.value]);\r\n    } else {\r\n        const newTypeFilter = typeFilter.filter(oldType => {\r\n        return oldType != e.target.value;\r\n        })\r\n\r\n        setTypeFilter(newTypeFilter);\r\n    }\r\n    }\r\n\r\n\r\n    <form style={{margin: '1rem'}}>\r\n\r\n    {dataList.types.map(type => (\r\n    <>\r\n        \r\n        <input \r\n        type=\"checkbox\" \r\n        name={type} \r\n        value={type} \r\n        checked={typeFilter.includes(type)} \r\n        onClick={handleCheckboxClick}\r\n        id={type}\r\n        />\r\n\r\n        <label htmlFor={type}>{type}</label>\r\n    </>\r\n    ))}\r\n    </form>\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,QAAQ,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAExD,MAAMW,YAAY,GAAGV,WAAW,CAACW,MAAM,CAAEC,MAAM,IAAK;IACpD,OAAOJ,UAAU,CAACK,MAAM,GAAGL,UAAU,CAACM,QAAQ,CAACF,MAAM,CAACG,UAAU,CAAC,GAAG,IAAI;EACxE,CAAC,CAAC;EAEF,MAAMC,mBAAmB,GAAIC,CAAC,IAAK;IACnC,IAAG,CAACT,UAAU,CAACM,QAAQ,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,EAAE;MACrCV,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAES,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;IAClD,CAAC,MAAM;MACH,MAAMC,aAAa,GAAGZ,UAAU,CAACG,MAAM,CAACU,OAAO,IAAI;QACnD,OAAOA,OAAO,IAAIJ,CAAC,CAACC,MAAM,CAACC,KAAK;MAChC,CAAC,CAAC;MAEFV,aAAa,CAACW,aAAa,CAAC;IAChC;EACA,CAAC;EAGD,aAAAjB,OAAA;IAAMmB,KAAK,EAAE;MAACC,MAAM,EAAE;IAAM,CAAE;IAAAC,QAAA,EAE7BvB,QAAQ,CAACwB,KAAK,CAACC,GAAG,CAACC,IAAI,iBACxBxB,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBAEIrB,OAAA;QACAwB,IAAI,EAAC,UAAU;QACfC,IAAI,EAAED,IAAK;QACXR,KAAK,EAAEQ,IAAK;QACZE,OAAO,EAAErB,UAAU,CAACM,QAAQ,CAACa,IAAI,CAAE;QACnCG,OAAO,EAAEd,mBAAoB;QAC7Be,EAAE,EAAEJ;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEFhC,OAAA;QAAOiC,OAAO,EAAET,IAAK;QAAAH,QAAA,EAAEG;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACtC,CACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AACX;AAAC5B,EAAA,CAtCuBD,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}