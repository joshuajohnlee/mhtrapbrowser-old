{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\Documents\\\\Programming Projects\\\\MHTrapBrowser\\\\trapbrowser-react\\\\src\\\\components\\\\Weapons.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport weaponsList from '../assets/weapons.json';\nimport WeaponCard from \"./WeaponCard\";\nimport ModalFilterForm from \"./ModalFilterForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Weapons() {\n  _s();\n  const [typeFilter, setTypeFilter] = useState(['Arcane']);\n  const filteredList = weaponsList.filter(weapon => {\n    return typeFilter.length ? typeFilter.includes(weapon.power_type) : true;\n  });\n  const handleCheckboxClick = e => {\n    if (!typeFilter.includes(e.target.value)) {\n      setTypeFilter([...typeFilter, e.target.value]);\n    } else {\n      const newTypeFilter = typeFilter.filter(oldType => {\n        return oldType != e.target.value;\n      });\n      setTypeFilter(newTypeFilter);\n    }\n  };\n  /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      margin: '1rem'\n    },\n    children: dataList.types.map(type => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: type,\n        value: type,\n        checked: typeFilter.includes(type),\n        onClick: handleCheckboxClick,\n        id: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: type,\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalFilterForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), filteredList.map(weapon => /*#__PURE__*/_jsxDEV(WeaponCard, {\n      weapon: weapon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(Weapons, \"VxvTdwSEQ8y2RGUhJtDvRIJ0eAI=\");\n_c = Weapons;\nvar _c;\n$RefreshReg$(_c, \"Weapons\");","map":{"version":3,"names":["useEffect","useState","weaponsList","WeaponCard","ModalFilterForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Weapons","_s","typeFilter","setTypeFilter","filteredList","filter","weapon","length","includes","power_type","handleCheckboxClick","e","target","value","newTypeFilter","oldType","style","margin","children","dataList","types","map","type","name","checked","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/joshu/Documents/Programming Projects/MHTrapBrowser/trapbrowser-react/src/components/Weapons.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport weaponsList from '../assets/weapons.json';\r\nimport WeaponCard from \"./WeaponCard\";\r\nimport ModalFilterForm from \"./ModalFilterForm\";\r\n\r\nexport default function Weapons() {\r\n\r\n  const [typeFilter, setTypeFilter] = useState(['Arcane']);\r\n\r\n  const filteredList = weaponsList.filter((weapon) => {\r\n    return typeFilter.length ? typeFilter.includes(weapon.power_type) : true;\r\n  });\r\n\r\n  \r\n  const handleCheckboxClick = (e) => {\r\n    if(!typeFilter.includes(e.target.value)) {\r\n        setTypeFilter([...typeFilter, e.target.value]);\r\n    } else {\r\n        const newTypeFilter = typeFilter.filter(oldType => {\r\n        return oldType != e.target.value;\r\n        })\r\n\r\n        setTypeFilter(newTypeFilter);\r\n    }\r\n    }\r\n\r\n\r\n    <form style={{margin: '1rem'}}>\r\n\r\n    {dataList.types.map(type => (\r\n    <>\r\n        \r\n        <input \r\n        type=\"checkbox\" \r\n        name={type} \r\n        value={type} \r\n        checked={typeFilter.includes(type)} \r\n        onClick={handleCheckboxClick}\r\n        id={type}\r\n        />\r\n\r\n        <label htmlFor={type}>{type}</label>\r\n    </>\r\n    ))}\r\n    </form>\r\n  \r\n  return(\r\n    <>\r\n      <ModalFilterForm />\r\n\r\n      {filteredList.map((weapon) => (\r\n        <WeaponCard weapon={weapon}/>\r\n      ))}\r\n    </>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEhC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAExD,MAAMY,YAAY,GAAGX,WAAW,CAACY,MAAM,CAAEC,MAAM,IAAK;IAClD,OAAOJ,UAAU,CAACK,MAAM,GAAGL,UAAU,CAACM,QAAQ,CAACF,MAAM,CAACG,UAAU,CAAC,GAAG,IAAI;EAC1E,CAAC,CAAC;EAGF,MAAMC,mBAAmB,GAAIC,CAAC,IAAK;IACjC,IAAG,CAACT,UAAU,CAACM,QAAQ,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,EAAE;MACrCV,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAES,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;IAClD,CAAC,MAAM;MACH,MAAMC,aAAa,GAAGZ,UAAU,CAACG,MAAM,CAACU,OAAO,IAAI;QACnD,OAAOA,OAAO,IAAIJ,CAAC,CAACC,MAAM,CAACC,KAAK;MAChC,CAAC,CAAC;MAEFV,aAAa,CAACW,aAAa,CAAC;IAChC;EACA,CAAC;EAGD,aAAAjB,OAAA;IAAMmB,KAAK,EAAE;MAACC,MAAM,EAAE;IAAM,CAAE;IAAAC,QAAA,EAE7BC,QAAQ,CAACC,KAAK,CAACC,GAAG,CAACC,IAAI,iBACxBzB,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBAEIrB,OAAA;QACAyB,IAAI,EAAC,UAAU;QACfC,IAAI,EAAED,IAAK;QACXT,KAAK,EAAES,IAAK;QACZE,OAAO,EAAEtB,UAAU,CAACM,QAAQ,CAACc,IAAI,CAAE;QACnCG,OAAO,EAAEf,mBAAoB;QAC7BgB,EAAE,EAAEJ;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEFjC,OAAA;QAAOkC,OAAO,EAAET,IAAK;QAAAJ,QAAA,EAAEI;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACtC,CACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;EAET,oBACEjC,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA,CAACF,eAAe;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAElB1B,YAAY,CAACiB,GAAG,CAAEf,MAAM,iBACvBT,OAAA,CAACH,UAAU;MAACY,MAAM,EAAEA;IAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAC7B,CAAC;EAAA,eACF,CAAC;AAEP;AAAC7B,EAAA,CAlDuBD,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}